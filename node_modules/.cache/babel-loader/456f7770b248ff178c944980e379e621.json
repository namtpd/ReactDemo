{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nam\\\\waaworkspace\\\\WAA\\\\MakeupExamFrontEnd\\\\src\\\\components\\\\EnterName.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { SayHello } from '../lab09/SayHello';\nimport { Cal1 } from '../lab09/Cal1';\nimport { Cal2 } from '../lab09/Cal2';\nimport { Calculator } from '../lab12/Calculator';\nimport { Contacts } from '../lab12/Contacts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EnterName = props => {\n  _s();\n\n  const cleanuser = {\n    username: \"\",\n    password: \"\"\n  };\n  const [account, setAccount] = useState(cleanuser);\n  const dispatch = useDispatch();\n\n  let handleFieldChange = event => {\n    setAccount({ ...account,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  let nextHandler = e => {\n    e.preventDefault();\n    const isValid = formValidation();\n    if (!isValid) return;\n    handleOnSubmit();\n  };\n\n  const handleOnSubmit = () => {\n    dispatch({\n      type: 'CREATE_ACC',\n      account: account\n    });\n    props.history.push(\"/login\", account);\n  };\n\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const formValidation = () => {\n    const usernameErr = {};\n    const passwordErr = {};\n    let isValid = true;\n\n    if (account.username.trim().length < 5 || account.username.trim().length > 10) {\n      usernameErr.shortLen = \"Username needs to be between 5 and 10 characters long\";\n      isValid = false;\n    }\n\n    if (account.password.trim().length < 5) {\n      passwordErr.longErr = \"Password should be at least 5 characters long \";\n      isValid = false;\n    }\n\n    setUsernameError(usernameErr);\n    setPasswordError(passwordErr);\n    return isValid;\n  };\n\n  const [globalCount, setGlobalCount] = useState(0);\n\n  const add = dist => {\n    setGlobalCount(globalCount + dist);\n  };\n\n  const sub = dist => {\n    setGlobalCount(globalCount - dist);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\xA0Enter Your Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"username\",\n        value: account.username,\n        onChange: handleFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), Object.keys(usernameError).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: usernameError[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"nextHandler\",\n        onClick: nextHandler,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnterName, \"f1z8msXWNk4rMOdKzduNg4+b5ME=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EnterName;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterName\");","map":{"version":3,"sources":["C:/Nam/waaworkspace/WAA/MakeupExamFrontEnd/src/components/EnterName.js"],"names":["useSelector","useDispatch","useState","SayHello","Cal1","Cal2","Calculator","Contacts","EnterName","props","cleanuser","username","password","account","setAccount","dispatch","handleFieldChange","event","target","name","value","nextHandler","e","preventDefault","isValid","formValidation","handleOnSubmit","type","history","push","usernameError","setUsernameError","passwordError","setPasswordError","usernameErr","passwordErr","trim","length","shortLen","longErr","globalCount","setGlobalCount","add","dist","sub","Object","keys","map","key","color"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { SayHello } from '../lab09/SayHello';\r\nimport { Cal1 } from '../lab09/Cal1';\r\nimport { Cal2 } from '../lab09/Cal2';\r\nimport { Calculator } from '../lab12/Calculator';\r\nimport { Contacts } from '../lab12/Contacts';\r\n\r\nexport const EnterName = (props) => {\r\n    const cleanuser = { username: \"\", password: \"\" };\r\n    const [account, setAccount] = useState(cleanuser);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let handleFieldChange = (event) => {\r\n        setAccount({ ...account, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    let nextHandler = (e) => {\r\n        e.preventDefault();\r\n        const isValid = formValidation();\r\n        if (!isValid)\r\n            return;\r\n\r\n        handleOnSubmit();\r\n    }\r\n\r\n    const handleOnSubmit = () => {\r\n        dispatch({ type: 'CREATE_ACC', account: account });\r\n        props.history.push(\"/login\", account);\r\n    }\r\n\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n    const formValidation = () => {\r\n        const usernameErr = {};\r\n        const passwordErr = {};\r\n\r\n        let isValid = true;\r\n        if (account.username.trim().length < 5 || account.username.trim().length > 10) {\r\n            usernameErr.shortLen = \"Username needs to be between 5 and 10 characters long\";\r\n            isValid = false;\r\n        }\r\n        if (account.password.trim().length < 5) {\r\n            passwordErr.longErr = \"Password should be at least 5 characters long \";\r\n            isValid = false;\r\n        }\r\n\r\n        setUsernameError(usernameErr);\r\n        setPasswordError(passwordErr);\r\n\r\n        return isValid;\r\n    };\r\n\r\n    const [globalCount, setGlobalCount] = useState(0);\r\n\r\n    const add = (dist) => {\r\n\r\n        setGlobalCount(globalCount + dist)\r\n    }\r\n    const sub = (dist) => {\r\n\r\n        setGlobalCount(globalCount - dist)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create Account</h1>\r\n            <div>&nbsp;Enter Your Name\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    value={account.username}\r\n                    onChange={handleFieldChange} />\r\n                {Object.keys(usernameError).map((key) => {\r\n                    return <div style={{ color: \"red\" }}>{usernameError[key]}</div>;\r\n                })}\r\n                <button type=\"button\" id='nextHandler' \r\n                    onClick={nextHandler}>Next</button>\r\n            </div>\r\n            {/* <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Username</td>\r\n                        <td>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                name=\"username\"\r\n                                value={account.username}\r\n                                onChange={handleFieldChange} />\r\n                            {Object.keys(usernameError).map((key) => {\r\n                                return <div style={{ color: \"red\" }}>{usernameError[key]}</div>;\r\n                            })}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr><td><button type=\"button\" id='createAccount' \r\n                    onClick={createAccount}>createAccount</button></td></tr>\r\n                </tbody>\r\n            </table>\r\n            <br></br>\r\n            <SayHello {...props} message=\"Component1\" />\r\n            <SayHello {...props} message=\"Component2\" />\r\n            <br />\r\n            <Cal1 {...props} dist={1} />\r\n            <Cal1 {...props} dist={3} />\r\n            <br />\r\n            <Cal2 {...props} globalCount={globalCount} setGlobalCount={setGlobalCount} dist={1} add={add} sub={sub} />\r\n            <Cal2 {...props} globalCount={globalCount} setGlobalCount={setGlobalCount} dist={3} add={add} sub={sub} />\r\n            <br />\r\n            <Calculator />\r\n            <br />\r\n            <Contacts /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}