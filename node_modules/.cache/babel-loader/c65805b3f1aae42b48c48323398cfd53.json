{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nam\\\\waaworkspace\\\\WAA\\\\MakeupExamFrontEnd\\\\src\\\\components\\\\ProductList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductList = props => {\n  _s();\n\n  const loginAccount = useSelector(state => state.loginAccount);\n  const accountList = useSelector(state => state.accountList);\n  const cleanuser = {\n    username: \"\",\n    password: \"\"\n  };\n  const [account, setAccount] = useState(cleanuser);\n  const dispatch = useDispatch();\n\n  let handleFieldChange = event => {\n    setAccount({ ...account,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  let loginHandler = e => {\n    if (!validate()) {\n      setErrorText(\"Invalid username / password\");\n      return;\n    }\n\n    dispatch({\n      type: 'LOGIN',\n      loginAccount: account\n    });\n    props.history.push(\"/welcome\", account);\n  };\n\n  let validate = () => {\n    for (let i = 0; i < accountList.length; i++) {\n      if (accountList[i].username === account.username && accountList[i].password === account.password) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  let createAccount = e => {\n    e.preventDefault();\n    const isValid = formValidation();\n    if (!isValid) return;\n    handleOnSubmit();\n  };\n\n  const handleOnSubmit = () => {\n    dispatch({\n      type: 'CREATE_ACC',\n      account: account\n    });\n    props.history.push(\"/login\", account);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"errorLogin\",\n      children: [\" \", errorText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              name: \"username\",\n              value: account.username,\n              onChange: handleFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), Object.keys(usernameError).map(key => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: usernameError[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"password\",\n              name: \"password\",\n              value: account.password,\n              onChange: handleFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), Object.keys(passwordError).map(key => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: passwordError[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"login\",\n              type: \"button\",\n              onClick: loginHandler,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"createAccount\",\n              type: \"button\",\n              onClick: createAccount,\n              children: \"createAccount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductList, \"RzhNNiQyxFvfkm72gJPXkcMWZvY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["C:/Nam/waaworkspace/WAA/MakeupExamFrontEnd/src/components/ProductList.js"],"names":["useSelector","useDispatch","useState","ProductList","props","loginAccount","state","accountList","cleanuser","username","password","account","setAccount","dispatch","handleFieldChange","event","target","name","value","loginHandler","e","validate","setErrorText","type","history","push","i","length","createAccount","preventDefault","isValid","formValidation","handleOnSubmit","errorText","Object","keys","usernameError","map","key","color","passwordError"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nexport const ProductList = (props) => {\r\n    const loginAccount = useSelector(state => state.loginAccount);\r\n    const accountList = useSelector(state => state.accountList);\r\n\r\n    const cleanuser = {username: \"\", password: \"\"};\r\n    const [account, setAccount] = useState(cleanuser);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let handleFieldChange = (event) => {\r\n        setAccount({...account, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    let loginHandler = (e) => {\r\n\r\n        if (!validate())\r\n        {\r\n            setErrorText(\"Invalid username / password\")\r\n            return;\r\n        } \r\n        dispatch({ type : 'LOGIN', loginAccount: account })\r\n        props.history.push(\"/welcome\", account);\r\n    }\r\n    let validate = () => {\r\n        for (let i = 0; i < accountList.length; i++) {\r\n          if (accountList[i].username === account.username\r\n              && accountList[i].password === account.password) {\r\n            return true;\r\n          }\r\n        }\r\n    \r\n        return false;\r\n      }\r\n\r\n    let createAccount = (e) => {\r\n        e.preventDefault();\r\n        const isValid = formValidation();\r\n        if (!isValid)\r\n            return;\r\n\r\n        handleOnSubmit();\r\n    }\r\n\r\n    const handleOnSubmit = () => {\r\n        dispatch({ type : 'CREATE_ACC', account: account });\r\n\r\n        props.history.push(\"/login\", account);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Product List</h1>\r\n            <div id=\"errorLogin\"> {errorText}\r\n\r\n            </div>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Username</td>\r\n                        <td>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                name=\"username\"\r\n                                value={account.username}\r\n                                onChange={handleFieldChange} />\r\n                            {Object.keys(usernameError).map((key) => {\r\n                                return <div style={{ color: \"red\" }}>{usernameError[key]}</div>;\r\n                            })}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Password</td>\r\n                        <td>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"password\"\r\n                                name=\"password\"\r\n                                value={account.password}\r\n                                onChange={handleFieldChange} />\r\n                            {Object.keys(passwordError).map((key) => {\r\n                                return <div style={{ color: \"red\" }}>{passwordError[key]}</div>;\r\n                            })}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <button id=\"login\" type=\"button\" onClick={loginHandler}>Login</button>\r\n                        </td>\r\n                        <td>\r\n                            <button id=\"createAccount\" type=\"button\" onClick={createAccount}>createAccount</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}