{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nam\\\\waaworkspace\\\\WAA\\\\FinalExam\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n\n  const loginAccount = useSelector(state => state.loginAccount);\n  const cleanuser = {\n    username: \"\",\n    password: \"\"\n  };\n  const [account, setAccount] = useState('');\n  const [errorText, setErrorText] = \"\";\n  const dispatch = useDispatch();\n\n  let handleFieldChange = event => {\n    setAccount({ ...account,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const [loginError, setLoginError] = useState(\"\");\n\n  let loginHandler = e => {\n    dispatch({\n      type: 'LOGIN',\n      loginAccount: account\n    });\n\n    if (loginAccount.username === 'FAILED') {\n      setErrorText(\"Invalid username / password\");\n      return;\n    }\n\n    props.history.push(\"/login\", account);\n  };\n\n  let createAccount = e => {\n    e.preventDefault();\n    const isValid = formValidation();\n    if (!isValid) return;\n    handleOnSubmit();\n  };\n\n  const handleOnSubmit = () => {\n    dispatch({\n      type: 'CREATE_ACC',\n      account: account\n    });\n    props.history.push(\"/login\", account);\n  };\n\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const formValidation = () => {\n    const usernameErr = {};\n    const passwordErr = {};\n    let isValid = true;\n\n    if (account.username.trim().length < 5 || account.username.trim().length > 10) {\n      usernameErr.shortLen = \"Username needs to be between 5 and 10 characters long\";\n      isValid = false;\n    }\n\n    if (account.password.trim().length < 5) {\n      passwordErr.longErr = \"Password should be at least 5 characters long \";\n      isValid = false;\n    }\n\n    setUsernameError(usernameErr);\n    setPasswordError(passwordErr);\n    return isValid;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", errorText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              name: \"username\",\n              value: account.username,\n              onChange: handleFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), Object.keys(usernameError).map(key => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: usernameError[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"password\",\n              name: \"password\",\n              value: account.password,\n              onChange: handleFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), Object.keys(passwordError).map(key => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: passwordError[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: loginHandler,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: createAccount,\n              children: \"createAccount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"wMepPu1Ls96NQhKDponQ5NF8kOA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Nam/waaworkspace/WAA/FinalExam/src/components/Login.js"],"names":["useSelector","useDispatch","useState","Login","props","loginAccount","state","cleanuser","username","password","account","setAccount","errorText","setErrorText","dispatch","handleFieldChange","event","target","name","value","loginError","setLoginError","loginHandler","e","type","history","push","createAccount","preventDefault","isValid","formValidation","handleOnSubmit","usernameError","setUsernameError","passwordError","setPasswordError","usernameErr","passwordErr","trim","length","shortLen","longErr","Object","keys","map","key","color"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nexport const Login = (props) => {\r\n    const loginAccount = useSelector(state => state.loginAccount);\r\n\r\n    const cleanuser = {username: \"\", password: \"\"};\r\n    const [account, setAccount] = useState('');\r\n\r\n    const [errorText, setErrorText] = \"\"\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let handleFieldChange = (event) => {\r\n        setAccount({...account, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const [loginError, setLoginError] = useState(\"\");\r\n\r\n    let loginHandler = (e) => {\r\n        dispatch({ type : 'LOGIN', loginAccount: account });\r\n\r\n        if (loginAccount.username === 'FAILED')\r\n        {\r\n            setErrorText(\"Invalid username / password\")\r\n            return;\r\n        } \r\n        props.history.push(\"/login\", account);\r\n    }\r\n\r\n    let createAccount = (e) => {\r\n        e.preventDefault();\r\n        const isValid = formValidation();\r\n        if (!isValid)\r\n            return;\r\n\r\n        handleOnSubmit();\r\n    }\r\n\r\n    const handleOnSubmit = () => {\r\n        dispatch({ type : 'CREATE_ACC', account: account });\r\n        props.history.push(\"/login\",\r\n        account);\r\n    }\r\n\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n    const formValidation = () => {\r\n        const usernameErr = {};\r\n        const passwordErr = {};\r\n\r\n        let isValid = true;\r\n        if (account.username.trim().length < 5 || account.username.trim().length > 10) {\r\n            usernameErr.shortLen = \"Username needs to be between 5 and 10 characters long\";\r\n            isValid = false;\r\n        }\r\n        if (account.password.trim().length < 5) {\r\n            passwordErr.longErr = \"Password should be at least 5 characters long \";\r\n            isValid = false;\r\n        }\r\n\r\n        setUsernameError(usernameErr);\r\n        setPasswordError(passwordErr);\r\n\r\n        return isValid;\r\n    };\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Create Account</h1>\r\n            <div> {errorText}\r\n\r\n            </div>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Username</td>\r\n                        <td>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                name=\"username\"\r\n                                value={account.username}\r\n                                onChange={handleFieldChange} />\r\n                            {Object.keys(usernameError).map((key) => {\r\n                                return <div style={{ color: \"red\" }}>{usernameError[key]}</div>;\r\n                            })}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Password</td>\r\n                        <td>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"password\"\r\n                                name=\"password\"\r\n                                value={account.password}\r\n                                onChange={handleFieldChange} />\r\n                            {Object.keys(passwordError).map((key) => {\r\n                                return <div style={{ color: \"red\" }}>{passwordError[key]}</div>;\r\n                            })}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <button type=\"button\" onClick={loginHandler}>Login</button>\r\n                        </td>\r\n                        <td>\r\n                            <button type=\"button\" onClick={createAccount}>createAccount</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}